events {
    worker_connections 1024;
}

http {
    # Lua code to check the Bearer token
    lua_shared_dict auth_cache 10m;
    init_by_lua_block {
        function check_bearer_token(token)
            if token == "Bearer " .. "12345" then
                return true
            end

            return false
        end
    }

    server {
        server_name localhost;

        location /auth {
            internal;
            content_by_lua_block {
                local auth_header = ngx.var.http_authorization
                if auth_header and check_bearer_token(auth_header) then
                    ngx.exit(ngx.HTTP_OK)
                else
                    ngx.exit(ngx.HTTP_UNAUTHORIZED)
                end
            }
        }

        location / {
            auth_request /auth;
            proxy_pass http://ollama:11434;
            proxy_set_header    Host            $host;
            proxy_set_header    X-Real-IP       $remote_addr;
            proxy_set_header    X-Forwarded-for $remote_addr;
            port_in_redirect off;
            proxy_connect_timeout 300;
        }

        listen 80;
    }
}
